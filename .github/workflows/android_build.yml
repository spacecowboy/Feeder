name: Build

on:
  push:
    branches:
      - master

jobs:
  # this job builds and uploads the apk
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: perform the checkout
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        fetch-depth: 0

    # Verify the SHA-sum
    - name: validate gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: setup JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: prepare for build
      shell: bash
      run: ./prepare_for_build.sh
      env:
        SERVICEACCOUNTJSON: ${{ secrets.SERVICEACCOUNTJSON }}
        KEYSTOREPASSWORD: ${{ secrets.KEYSTOREPASSWORD }}
        KEYSTORE: ${{ secrets.KEYSTORE }}
        KEYPASSWORD: ${{ secrets.KEYPASSWORD }}
        KEYALIAS: ${{ secrets.KEYALIAS }}

    - name: bump version if not release
      shell: bash
      run: ci/run-if-not-release fastlane bump_version_code

    - name: gradle build
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build app:bundlePlay :app:lint check

    - name: validate deploy
      shell: bash
      run: ci/run-if-not-release ./deploy_playstore_fast.sh --dry-run

  # Runs emulator tests
  # connected_check:
  #   runs-on: macos-latest
  #   permissions:
  #     contents: read
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: 'recursive'

  #     - name: validate gradle wrapper
  #       continue-on-error: true
  #       uses: gradle/wrapper-validation-action@v1

  #     - name: setup JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: 11
  #         distribution: temurin

  #     - name: accept licenses
  #       shell: bash
  #       run: ci/accept-licenses

  #     - name: Gradle cache
  #       uses: gradle/gradle-build-action@v2

  #     - name: AVD cache
  #       uses: actions/cache@v3
  #       id: avd-cache
  #       with:
  #         path: |
  #           ~/.android/avd/*
  #           ~/.android/adb*
  #         key: avd-29

  #     - name: create AVD and generate snapshot for caching
  #       if: steps.avd-cache.outputs.cache-hit != 'true'
  #       uses: reactivecircus/android-emulator-runner@v2
  #       with:
  #         api-level: 29
  #         force-avd-creation: false
  #         disable-animations: false
  #         ram-size: 4096M
  #         emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
  #         script: echo "Generated AVD snapshot for caching."

  #     - name: run tests
  #       uses: reactivecircus/android-emulator-runner@v2
  #       with:
  #         api-level: 29
  #         disable-animations: true
  #         ram-size: 4096M
  #         emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
  #         # Clear logcat before tests begin
  #         script: |
  #           adb logcat -c
  #           ./gradlew connectedCheck
  #           adb logcat -d *:D > logcat-dump.txt

  #     - name: upload the generated files
  #       uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         retention-days: 1
  #         name: artifacts
  #         path: |
  #           logcat-dump.txt
  #           app/build/reports/androidTests/**

