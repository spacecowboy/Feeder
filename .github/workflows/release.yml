name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: perform the checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
          fetch-tags: true

      - name: version
        run: echo "::set-output name=versioncode::$(grep "versionCode" app/build.gradle.kts | sed "s|\s*versionCode = \([0-9]\+\)|\\1|")"
        id: version

      # Verify the SHA-sum
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: prepare for build
        shell: bash
        run: ./prepare_for_build.sh
        env:
          SERVICEACCOUNTJSON: ${{ secrets.SERVICEACCOUNTJSON }}
          KEYSTOREPASSWORD: ${{ secrets.KEYSTOREPASSWORD }}
          KEYSTORE: ${{ secrets.KEYSTORE }}
          KEYPASSWORD: ${{ secrets.KEYPASSWORD }}
          KEYALIAS: ${{ secrets.KEYALIAS }}

      - name: gradle setup
        uses: gradle/actions/setup-gradle@v4
      - name: gradle build
        run: ./gradlew build :app:lint check app:bundlePlayRelease

      - name: deploy to play store
        shell: bash
        run: ./deploy_playstore_fast.sh

      - name: get latest changelog entry
        run: mkdir -p build && ci/latest-changelog.py CHANGELOG.md > build/release_notes.md

      - name: release
        uses: softprops/action-gh-release@v2
        # Ignore if play store fails because Google sucks
        if: ${{ !cancelled() }}
        with:
          draft: false
          body_path: build/release_notes.md
          fail_on_unmatched_files: true
          files: |
            app/build/outputs/apk/fdroid/release/app-fdroid-release.apk
            app/build/outputs/apk/play/release/app-play-release.apk
